/*
 * Created on 8 nov 2016 ( Time 16:16:32 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package it.csi.sira.backend.metadata.integration.dao.impl;

import java.sql.ResultSet;
import java.sql.SQLException;

import it.csi.sira.backend.metadata.integration.dto.SipraMtdRCategoriaMtd;
import it.csi.sira.backend.metadata.integration.dao.SipraMtdRCategoriaMtdDAO;
import it.csi.sira.backend.metadata.utils.GenericDAO;
import org.springframework.jdbc.core.RowMapper;

/**
 * SipraMtdRCategoriaMtd DAO implementation 
 * 
 * @author Telosys Tools
 *
 */
public class SipraMtdRCategoriaMtdDAOImpl extends GenericDAO<SipraMtdRCategoriaMtd> implements SipraMtdRCategoriaMtdDAO {
	//----------------------------------------------------------------------
	/**
	 * DAO constructor
	 */
	public SipraMtdRCategoriaMtdDAOImpl() {
		super();
	}

	private final static String QUERY_PRIMARY_KEY = 
		"select * from sipra_mtd_r_categoria_mtd where id_categoria = :id_categoria and id_metadato = :id_metadato";
	
	private final static String QUERY_INSERT = 
		"insert into sipra_mtd_r_categoria_mtd(id_categoria,id_metadato) values(:id_categoria,:id_metadato)";

	private final static String QUERY_UPDATE = 
		"update sipra_mtd_r_categoria_mtd set   where id_categoria = :id_categoria and id_metadato = :id_metadato";

	private final static String QUERY_DELETE = 
		"delete from sipra_mtd_r_categoria_mtd where  id_categoria = :id_categoria and id_metadato = :id_metadato";

	private final static String SQL_COUNT_ALL = 
		"select count(*) from sipra_mtd_r_categoria_mtd";
	
	@Override
	public String getPrimaryKeySelect() {
		return QUERY_PRIMARY_KEY;		
	}
	
	@Override
	public String getTableName(){
		return "sipra_mtd_r_categoria_mtd";
	}

	@Override
	public String getSqlSelect() {
		return "select * from sipra_mtd_r_categoria_mtd";
	}

	@Override
	public String getSqlInsert() {
		return QUERY_INSERT;
	}

	@Override
	public String getSqlUpdate() {
		return QUERY_UPDATE;
	}

	@Override
	public String getSqlDelete() {
		return QUERY_DELETE;
	}

	@Override
	public String getSqlCount() {
		return SQL_COUNT_ALL;
	}

	public SipraMtdRCategoriaMtd findByPK(Integer idCategoria, Integer idMetadato) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_categoria", idCategoria);
		map.put("id_metadato", idMetadato);
		return super.findByPK(map);		
	}

	public int deleteByPK(Integer idCategoria, Integer idMetadato) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_categoria", idCategoria);
		map.put("id_metadato", idMetadato);
		return super.delete(getSqlDelete(), map);		
	}

	@Override
	public java.util.Map<String, Object> getValuesForInsert(SipraMtdRCategoriaMtd sipraMtdRCategoriaMtd) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_categoria", sipraMtdRCategoriaMtd.getIdCategoria());
		map.put("id_metadato", sipraMtdRCategoriaMtd.getIdMetadato());
		return map;
	}

	@Override
	public java.util.Map<String, Object> getValuesForUpdate(SipraMtdRCategoriaMtd sipraMtdRCategoriaMtd) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_categoria", sipraMtdRCategoriaMtd.getIdCategoria());
		map.put("id_metadato", sipraMtdRCategoriaMtd.getIdMetadato());
		return map;
	}

	public java.util.Map<String, Object> getValuesForPrimaryKey(SipraMtdRCategoriaMtd sipraMtdRCategoriaMtd) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_categoria", sipraMtdRCategoriaMtd.getIdCategoria());
		map.put("id_metadato", sipraMtdRCategoriaMtd.getIdMetadato());
		return map;
	}

	@Override
	public java.util.Map<String, Object> getValuesForDelete(SipraMtdRCategoriaMtd sipraMtdRCategoriaMtd) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_categoria", sipraMtdRCategoriaMtd.getIdCategoria());
		map.put("id_metadato", sipraMtdRCategoriaMtd.getIdMetadato());
		return map;
	}

	@Override
	public RowMapper<SipraMtdRCategoriaMtd> getRowMapper()  {
		//--- RowMapper to populate a new bean instance
		//return new SipraMtdRCategoriaMtdRowMapper( new SipraMtdRCategoriaMtd() ) ;

       return new SipraMtdRCategoriaMtdRowMapper() ;
	}

	//----------------------------------------------------------------------
	/**
	 * Populates the given bean with the data retrieved from the given ResultSet
	 * @param rs
	 * @param sipraMtdRCategoriaMtd
	 * @throws SQLException
	 */
	private static void populateBean(ResultSet rs, SipraMtdRCategoriaMtd sipraMtdRCategoriaMtd) throws SQLException {

		//--- Set data from ResultSet to Bean attributes
		sipraMtdRCategoriaMtd.setIdCategoria(rs.getInt("id_categoria")); // java.lang.Integer
		if ( rs.wasNull() ) { sipraMtdRCategoriaMtd.setIdCategoria(null); }; // not primitive number => keep null value if any
		sipraMtdRCategoriaMtd.setIdMetadato(rs.getInt("id_metadato")); // java.lang.Integer
		if ( rs.wasNull() ) { sipraMtdRCategoriaMtd.setIdMetadato(null); }; // not primitive number => keep null value if any
	}


	/**
	 * Specific inner class for 'RowMapper' implementation
	 */
	public static class SipraMtdRCategoriaMtdRowMapper implements RowMapper<SipraMtdRCategoriaMtd> {
	
		public SipraMtdRCategoriaMtdRowMapper() {
			
		}
		
		public SipraMtdRCategoriaMtd mapRow(ResultSet rs, int rowNum) throws SQLException {
			SipraMtdRCategoriaMtd bean = new SipraMtdRCategoriaMtd();
			populateBean(rs, bean);
			return bean;
		}
	}
}
