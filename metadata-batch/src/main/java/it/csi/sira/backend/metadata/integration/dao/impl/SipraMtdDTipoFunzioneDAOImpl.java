/*
 * Created on 8 nov 2016 ( Time 16:16:32 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package it.csi.sira.backend.metadata.integration.dao.impl;

import java.sql.ResultSet;
import java.sql.SQLException;

import it.csi.sira.backend.metadata.integration.dto.SipraMtdDTipoFunzione;
import it.csi.sira.backend.metadata.integration.dao.SipraMtdDTipoFunzioneDAO;
import it.csi.sira.backend.metadata.utils.GenericDAO;
import org.springframework.jdbc.core.RowMapper;

/**
 * SipraMtdDTipoFunzione DAO implementation 
 * 
 * @author Telosys Tools
 *
 */
public class SipraMtdDTipoFunzioneDAOImpl extends GenericDAO<SipraMtdDTipoFunzione> implements SipraMtdDTipoFunzioneDAO {
	//----------------------------------------------------------------------
	/**
	 * DAO constructor
	 */
	public SipraMtdDTipoFunzioneDAOImpl() {
		super();
	}

	private final static String QUERY_PRIMARY_KEY = 
		"select * from sipra_mtd_d_tipo_funzione where id_tipo_funzione = :id_tipo_funzione";
	
	private final static String QUERY_INSERT = 
		"insert into sipra_mtd_d_tipo_funzione(id_tipo_funzione,des_tipo_funzione,protocollo) values(:id_tipo_funzione,:des_tipo_funzione,:protocollo)";

	private final static String QUERY_UPDATE = 
		"update sipra_mtd_d_tipo_funzione set des_tipo_funzione = :des_tipo_funzione, protocollo = :protocollo  where id_tipo_funzione = :id_tipo_funzione";

	private final static String QUERY_DELETE = 
		"delete from sipra_mtd_d_tipo_funzione where  id_tipo_funzione = :id_tipo_funzione";

	private final static String SQL_COUNT_ALL = 
		"select count(*) from sipra_mtd_d_tipo_funzione";
	
	@Override
	public String getPrimaryKeySelect() {
		return QUERY_PRIMARY_KEY;		
	}
	
	@Override
	public String getTableName(){
		return "sipra_mtd_d_tipo_funzione";
	}

	@Override
	public String getSqlSelect() {
		return "select * from sipra_mtd_d_tipo_funzione";
	}

	@Override
	public String getSqlInsert() {
		return QUERY_INSERT;
	}

	@Override
	public String getSqlUpdate() {
		return QUERY_UPDATE;
	}

	@Override
	public String getSqlDelete() {
		return QUERY_DELETE;
	}

	@Override
	public String getSqlCount() {
		return SQL_COUNT_ALL;
	}

	public SipraMtdDTipoFunzione findByPK(Integer idTipoFunzione) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_tipo_funzione", idTipoFunzione);
		return super.findByPK(map);		
	}

	public int deleteByPK(Integer idTipoFunzione) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_tipo_funzione", idTipoFunzione);
		return super.delete(getSqlDelete(), map);		
	}

	@Override
	public java.util.Map<String, Object> getValuesForInsert(SipraMtdDTipoFunzione sipraMtdDTipoFunzione) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_tipo_funzione", sipraMtdDTipoFunzione.getIdTipoFunzione());
		map.put("des_tipo_funzione", sipraMtdDTipoFunzione.getDesTipoFunzione());
		map.put("protocollo", sipraMtdDTipoFunzione.getProtocollo());
		return map;
	}

	@Override
	public java.util.Map<String, Object> getValuesForUpdate(SipraMtdDTipoFunzione sipraMtdDTipoFunzione) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("des_tipo_funzione", sipraMtdDTipoFunzione.getDesTipoFunzione());
		map.put("protocollo", sipraMtdDTipoFunzione.getProtocollo());
		map.put("id_tipo_funzione", sipraMtdDTipoFunzione.getIdTipoFunzione());
		return map;
	}

	public java.util.Map<String, Object> getValuesForPrimaryKey(SipraMtdDTipoFunzione sipraMtdDTipoFunzione) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_tipo_funzione", sipraMtdDTipoFunzione.getIdTipoFunzione());
		return map;
	}

	@Override
	public java.util.Map<String, Object> getValuesForDelete(SipraMtdDTipoFunzione sipraMtdDTipoFunzione) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_tipo_funzione", sipraMtdDTipoFunzione.getIdTipoFunzione());
		return map;
	}

	@Override
	public RowMapper<SipraMtdDTipoFunzione> getRowMapper()  {
		//--- RowMapper to populate a new bean instance
		//return new SipraMtdDTipoFunzioneRowMapper( new SipraMtdDTipoFunzione() ) ;

       return new SipraMtdDTipoFunzioneRowMapper() ;
	}

	//----------------------------------------------------------------------
	/**
	 * Populates the given bean with the data retrieved from the given ResultSet
	 * @param rs
	 * @param sipraMtdDTipoFunzione
	 * @throws SQLException
	 */
	private static void populateBean(ResultSet rs, SipraMtdDTipoFunzione sipraMtdDTipoFunzione) throws SQLException {

		//--- Set data from ResultSet to Bean attributes
		sipraMtdDTipoFunzione.setIdTipoFunzione(rs.getInt("id_tipo_funzione")); // java.lang.Integer
		if ( rs.wasNull() ) { sipraMtdDTipoFunzione.setIdTipoFunzione(null); }; // not primitive number => keep null value if any
		sipraMtdDTipoFunzione.setDesTipoFunzione(rs.getString("des_tipo_funzione")); // java.lang.String
		sipraMtdDTipoFunzione.setProtocollo(rs.getString("protocollo")); // java.lang.String
	}


	/**
	 * Specific inner class for 'RowMapper' implementation
	 */
	public static class SipraMtdDTipoFunzioneRowMapper implements RowMapper<SipraMtdDTipoFunzione> {
	
		public SipraMtdDTipoFunzioneRowMapper() {
			
		}
		
		public SipraMtdDTipoFunzione mapRow(ResultSet rs, int rowNum) throws SQLException {
			SipraMtdDTipoFunzione bean = new SipraMtdDTipoFunzione();
			populateBean(rs, bean);
			return bean;
		}
	}
}
