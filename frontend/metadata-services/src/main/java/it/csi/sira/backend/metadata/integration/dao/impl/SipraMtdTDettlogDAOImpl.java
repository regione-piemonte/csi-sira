/*
 * Created on 8 nov 2016 ( Time 16:16:33 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package it.csi.sira.backend.metadata.integration.dao.impl;

import java.sql.ResultSet;
import java.sql.SQLException;

import it.csi.sira.backend.metadata.integration.dto.SipraMtdTDettlog;
import it.csi.sira.backend.metadata.integration.dao.SipraMtdTDettlogDAO;
import it.csi.sira.backend.metadata.utils.GenericDAO;
import org.springframework.jdbc.core.RowMapper;

/**
 * SipraMtdTDettlog DAO implementation 
 * 
 * @author Telosys Tools
 *
 */
public class SipraMtdTDettlogDAOImpl extends GenericDAO<SipraMtdTDettlog> implements SipraMtdTDettlogDAO {
	//----------------------------------------------------------------------
	/**
	 * DAO constructor
	 */
	public SipraMtdTDettlogDAOImpl() {
		super();
	}

	private final static String QUERY_PRIMARY_KEY = 
		"select * from sipra_mtd_t_dettlog where id_dett_log = :id_dett_log";
	
	private final static String QUERY_INSERT = 
		"insert into sipra_mtd_t_dettlog(id_dett_log,fk_log,cod_errore) values(:id_dett_log,:fk_log,:cod_errore)";

	private final static String QUERY_UPDATE = 
		"update sipra_mtd_t_dettlog set fk_log = :fk_log, cod_errore = :cod_errore  where id_dett_log = :id_dett_log";

	private final static String QUERY_DELETE = 
		"delete from sipra_mtd_t_dettlog where  id_dett_log = :id_dett_log";

	private final static String SQL_COUNT_ALL = 
		"select count(*) from sipra_mtd_t_dettlog";
	
	@Override
	public String getPrimaryKeySelect() {
		return QUERY_PRIMARY_KEY;		
	}
	
	@Override
	public String getTableName(){
		return "sipra_mtd_t_dettlog";
	}

	@Override
	public String getSqlSelect() {
		return "select * from sipra_mtd_t_dettlog";
	}

	@Override
	public String getSqlInsert() {
		return QUERY_INSERT;
	}

	@Override
	public String getSqlUpdate() {
		return QUERY_UPDATE;
	}

	@Override
	public String getSqlDelete() {
		return QUERY_DELETE;
	}

	@Override
	public String getSqlCount() {
		return SQL_COUNT_ALL;
	}

	public SipraMtdTDettlog findByPK(Integer idDettLog) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_dett_log", idDettLog);
		return super.findByPK(map);		
	}

	public int deleteByPK(Integer idDettLog) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_dett_log", idDettLog);
		return super.delete(getSqlDelete(), map);		
	}

	@Override
	public java.util.Map<String, Object> getValuesForInsert(SipraMtdTDettlog sipraMtdTDettlog) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_dett_log", sipraMtdTDettlog.getIdDettLog());
		map.put("fk_log", sipraMtdTDettlog.getFkLog());
		map.put("cod_errore", sipraMtdTDettlog.getCodErrore());
		return map;
	}

	@Override
	public java.util.Map<String, Object> getValuesForUpdate(SipraMtdTDettlog sipraMtdTDettlog) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("fk_log", sipraMtdTDettlog.getFkLog());
		map.put("cod_errore", sipraMtdTDettlog.getCodErrore());
		map.put("id_dett_log", sipraMtdTDettlog.getIdDettLog());
		return map;
	}

	public java.util.Map<String, Object> getValuesForPrimaryKey(SipraMtdTDettlog sipraMtdTDettlog) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_dett_log", sipraMtdTDettlog.getIdDettLog());
		return map;
	}

	@Override
	public java.util.Map<String, Object> getValuesForDelete(SipraMtdTDettlog sipraMtdTDettlog) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_dett_log", sipraMtdTDettlog.getIdDettLog());
		return map;
	}

	@Override
	public RowMapper<SipraMtdTDettlog> getRowMapper()  {
		//--- RowMapper to populate a new bean instance
		//return new SipraMtdTDettlogRowMapper( new SipraMtdTDettlog() ) ;

       return new SipraMtdTDettlogRowMapper() ;
	}

	//----------------------------------------------------------------------
	/**
	 * Populates the given bean with the data retrieved from the given ResultSet
	 * @param rs
	 * @param sipraMtdTDettlog
	 * @throws SQLException
	 */
	private static void populateBean(ResultSet rs, SipraMtdTDettlog sipraMtdTDettlog) throws SQLException {

		//--- Set data from ResultSet to Bean attributes
		sipraMtdTDettlog.setIdDettLog(rs.getInt("id_dett_log")); // java.lang.Integer
		if ( rs.wasNull() ) { sipraMtdTDettlog.setIdDettLog(null); }; // not primitive number => keep null value if any
		sipraMtdTDettlog.setFkLog(rs.getInt("fk_log")); // java.lang.Integer
		if ( rs.wasNull() ) { sipraMtdTDettlog.setFkLog(null); }; // not primitive number => keep null value if any
		sipraMtdTDettlog.setCodErrore(rs.getString("cod_errore")); // java.lang.String
	}


	/**
	 * Specific inner class for 'RowMapper' implementation
	 */
	public static class SipraMtdTDettlogRowMapper implements RowMapper<SipraMtdTDettlog> {
	
		public SipraMtdTDettlogRowMapper() {
			
		}
		
		public SipraMtdTDettlog mapRow(ResultSet rs, int rowNum) throws SQLException {
			SipraMtdTDettlog bean = new SipraMtdTDettlog();
			populateBean(rs, bean);
			return bean;
		}
	}
}
