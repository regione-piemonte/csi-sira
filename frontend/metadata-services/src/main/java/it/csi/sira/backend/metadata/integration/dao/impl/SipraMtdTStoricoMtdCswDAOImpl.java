/*
 * Created on 8 nov 2016 ( Time 16:16:34 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package it.csi.sira.backend.metadata.integration.dao.impl;

import java.sql.ResultSet;
import java.sql.SQLException;

import it.csi.sira.backend.metadata.integration.dto.SipraMtdTStoricoMtdCsw;
import it.csi.sira.backend.metadata.integration.dao.SipraMtdTStoricoMtdCswDAO;
import it.csi.sira.backend.metadata.utils.GenericDAO;
import org.springframework.jdbc.core.RowMapper;

/**
 * SipraMtdTStoricoMtdCsw DAO implementation 
 * 
 * @author Telosys Tools
 *
 */
public class SipraMtdTStoricoMtdCswDAOImpl extends GenericDAO<SipraMtdTStoricoMtdCsw> implements SipraMtdTStoricoMtdCswDAO {
	//----------------------------------------------------------------------
	/**
	 * DAO constructor
	 */
	public SipraMtdTStoricoMtdCswDAOImpl() {
		super();
	}

	private final static String QUERY_PRIMARY_KEY = 
		"select * from sipra_mtd_t_storico_mtd_csw where id_storico_metadato = :id_storico_metadato";
	
	private final static String QUERY_INSERT = 
		"insert into sipra_mtd_t_storico_mtd_csw(id_storico_metadato,dc_identifier,titolo,testo_abstract,tipo_metadato,url_metadato_calc,bound_box_crs,bound_box_lower_corner,bound_box_upper_corner) values(:id_storico_metadato,:dc_identifier,:titolo,:testo_abstract,:tipo_metadato,:url_metadato_calc,:bound_box_crs,:bound_box_lower_corner,:bound_box_upper_corner)";

	private final static String QUERY_UPDATE = 
		"update sipra_mtd_t_storico_mtd_csw set dc_identifier = :dc_identifier, titolo = :titolo, testo_abstract = :testo_abstract, tipo_metadato = :tipo_metadato, url_metadato_calc = :url_metadato_calc, bound_box_crs = :bound_box_crs, bound_box_lower_corner = :bound_box_lower_corner, bound_box_upper_corner = :bound_box_upper_corner  where id_storico_metadato = :id_storico_metadato";

	private final static String QUERY_DELETE = 
		"delete from sipra_mtd_t_storico_mtd_csw where  id_storico_metadato = :id_storico_metadato";

	private final static String SQL_COUNT_ALL = 
		"select count(*) from sipra_mtd_t_storico_mtd_csw";
	
	@Override
	public String getPrimaryKeySelect() {
		return QUERY_PRIMARY_KEY;		
	}
	
	@Override
	public String getTableName(){
		return "sipra_mtd_t_storico_mtd_csw";
	}

	@Override
	public String getSqlSelect() {
		return "select * from sipra_mtd_t_storico_mtd_csw";
	}

	@Override
	public String getSqlInsert() {
		return QUERY_INSERT;
	}

	@Override
	public String getSqlUpdate() {
		return QUERY_UPDATE;
	}

	@Override
	public String getSqlDelete() {
		return QUERY_DELETE;
	}

	@Override
	public String getSqlCount() {
		return SQL_COUNT_ALL;
	}

	public SipraMtdTStoricoMtdCsw findByPK(Integer idStoricoMetadato) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_storico_metadato", idStoricoMetadato);
		return super.findByPK(map);		
	}

	public int deleteByPK(Integer idStoricoMetadato) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_storico_metadato", idStoricoMetadato);
		return super.delete(getSqlDelete(), map);		
	}

	@Override
	public java.util.Map<String, Object> getValuesForInsert(SipraMtdTStoricoMtdCsw sipraMtdTStoricoMtdCsw) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_storico_metadato", sipraMtdTStoricoMtdCsw.getIdStoricoMetadato());
		map.put("dc_identifier", sipraMtdTStoricoMtdCsw.getDcIdentifier());
		map.put("titolo", sipraMtdTStoricoMtdCsw.getTitolo());
		map.put("testo_abstract", sipraMtdTStoricoMtdCsw.getTestoAbstract());
		map.put("tipo_metadato", sipraMtdTStoricoMtdCsw.getTipoMetadato());
		map.put("url_metadato_calc", sipraMtdTStoricoMtdCsw.getUrlMetadatoCalc());
		map.put("bound_box_crs", sipraMtdTStoricoMtdCsw.getBoundBoxCrs());
		map.put("bound_box_lower_corner", sipraMtdTStoricoMtdCsw.getBoundBoxLowerCorner());
		map.put("bound_box_upper_corner", sipraMtdTStoricoMtdCsw.getBoundBoxUpperCorner());
		return map;
	}

	@Override
	public java.util.Map<String, Object> getValuesForUpdate(SipraMtdTStoricoMtdCsw sipraMtdTStoricoMtdCsw) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("dc_identifier", sipraMtdTStoricoMtdCsw.getDcIdentifier());
		map.put("titolo", sipraMtdTStoricoMtdCsw.getTitolo());
		map.put("testo_abstract", sipraMtdTStoricoMtdCsw.getTestoAbstract());
		map.put("tipo_metadato", sipraMtdTStoricoMtdCsw.getTipoMetadato());
		map.put("url_metadato_calc", sipraMtdTStoricoMtdCsw.getUrlMetadatoCalc());
		map.put("bound_box_crs", sipraMtdTStoricoMtdCsw.getBoundBoxCrs());
		map.put("bound_box_lower_corner", sipraMtdTStoricoMtdCsw.getBoundBoxLowerCorner());
		map.put("bound_box_upper_corner", sipraMtdTStoricoMtdCsw.getBoundBoxUpperCorner());
		map.put("id_storico_metadato", sipraMtdTStoricoMtdCsw.getIdStoricoMetadato());
		return map;
	}

	public java.util.Map<String, Object> getValuesForPrimaryKey(SipraMtdTStoricoMtdCsw sipraMtdTStoricoMtdCsw) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_storico_metadato", sipraMtdTStoricoMtdCsw.getIdStoricoMetadato());
		return map;
	}

	@Override
	public java.util.Map<String, Object> getValuesForDelete(SipraMtdTStoricoMtdCsw sipraMtdTStoricoMtdCsw) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_storico_metadato", sipraMtdTStoricoMtdCsw.getIdStoricoMetadato());
		return map;
	}

	@Override
	public RowMapper<SipraMtdTStoricoMtdCsw> getRowMapper()  {
		//--- RowMapper to populate a new bean instance
		//return new SipraMtdTStoricoMtdCswRowMapper( new SipraMtdTStoricoMtdCsw() ) ;

       return new SipraMtdTStoricoMtdCswRowMapper() ;
	}

	//----------------------------------------------------------------------
	/**
	 * Populates the given bean with the data retrieved from the given ResultSet
	 * @param rs
	 * @param sipraMtdTStoricoMtdCsw
	 * @throws SQLException
	 */
	private static void populateBean(ResultSet rs, SipraMtdTStoricoMtdCsw sipraMtdTStoricoMtdCsw) throws SQLException {

		//--- Set data from ResultSet to Bean attributes
		sipraMtdTStoricoMtdCsw.setIdStoricoMetadato(rs.getInt("id_storico_metadato")); // java.lang.Integer
		if ( rs.wasNull() ) { sipraMtdTStoricoMtdCsw.setIdStoricoMetadato(null); }; // not primitive number => keep null value if any
		sipraMtdTStoricoMtdCsw.setDcIdentifier(rs.getString("dc_identifier")); // java.lang.String
		sipraMtdTStoricoMtdCsw.setTitolo(rs.getString("titolo")); // java.lang.String
		sipraMtdTStoricoMtdCsw.setTestoAbstract(rs.getString("testo_abstract")); // java.lang.String
		sipraMtdTStoricoMtdCsw.setTipoMetadato(rs.getString("tipo_metadato")); // java.lang.String
		sipraMtdTStoricoMtdCsw.setUrlMetadatoCalc(rs.getString("url_metadato_calc")); // java.lang.String
		sipraMtdTStoricoMtdCsw.setBoundBoxCrs(rs.getString("bound_box_crs")); // java.lang.String
		sipraMtdTStoricoMtdCsw.setBoundBoxLowerCorner(rs.getString("bound_box_lower_corner")); // java.lang.String
		sipraMtdTStoricoMtdCsw.setBoundBoxUpperCorner(rs.getString("bound_box_upper_corner")); // java.lang.String
	}


	/**
	 * Specific inner class for 'RowMapper' implementation
	 */
	public static class SipraMtdTStoricoMtdCswRowMapper implements RowMapper<SipraMtdTStoricoMtdCsw> {
	
		public SipraMtdTStoricoMtdCswRowMapper() {
			
		}
		
		public SipraMtdTStoricoMtdCsw mapRow(ResultSet rs, int rowNum) throws SQLException {
			SipraMtdTStoricoMtdCsw bean = new SipraMtdTStoricoMtdCsw();
			populateBean(rs, bean);
			return bean;
		}
	}
}
