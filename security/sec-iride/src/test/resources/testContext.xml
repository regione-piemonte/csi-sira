<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

    <!-- === FreeMarker === BEGIN === -->

    <!--
      Configure FreeMarker:

       - preferred charset: template files are stored in to UTF-8
       - TemplateExceptionHandler to handler errors
       - TemplateLoader to handle the resolution of where the template files come from
    -->
    <bean id="templateConfiguration"
          class="freemarker.template.Configuration">
        <property name="defaultEncoding" value="UTF-8" />
        <property name="templateExceptionHandler">
            <util:constant static-field="freemarker.template.TemplateExceptionHandler.RETHROW_HANDLER" />
        </property>
    </bean>
    <!--
      Unfortunately, even if it "seems" a property of freemarker.template.Configuration class, "templateLoader" it's not.
      Therefore we need to split in two the preparation of "templateConfiguration" bean,
      using MethodInvokingFactoryBean to explicitly call "setTemplateLoader" method.
    -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject">
            <ref local="templateConfiguration"/>
        </property>
        <property name="targetMethod">
            <value>setTemplateLoader</value>
        </property>
        <property name="arguments">
            <list>
                <bean class="freemarker.cache.ClassTemplateLoader">
                    <constructor-arg index="0" value="org.geoserver.security.iride.IrideSecurityProvider" />
                    <constructor-arg index="1" value="/iride/soap/request" />
                </bean>
            </list>
        </property>
    </bean>

    <!-- === FreeMarker ===   END === -->

    <!-- === TemplateEngine === BEGIN === -->

    <bean id="templateEngine"
          class="org.geoserver.security.iride.util.template.impl.freemarker.FreeMarkerTemplateEngine"
          p:templateConfiguration-ref="templateConfiguration"
          p:templateExtension="xml"
    />

    <!-- === TemplateEngine ===   END === -->

</beans>